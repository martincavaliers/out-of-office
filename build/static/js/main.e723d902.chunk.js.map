{"version":3,"sources":["components/GuestLoginForm.js","components/MainArea.js","components/StaffMember.js","components/StaffArea.js","components/Guest.js","components/GuestArea.js","components/SideBar.js","components/App.js","serviceWorker.js","index.js"],"names":["GuestLoginForm","state","firstName","lastName","validated","handleFirstNameChange","e","_this","setState","target","value","handleLastNameChange","handleValidation","value1","value2","match","prevState","handleSubmit","firstNameInput","document","querySelector","preventDefault","props","addGuest","focus","react_default","a","createElement","Container","id","Form","onSubmit","this","Row","Col","lg","Group","Control","required","type","placeholder","onChange","Button","variant","Component","MainArea","components_GuestLoginForm","StaffMember","react","className","inOffice","Badge","pill","StaffArea","staff","map","person","index","components_StaffMember","key","Guest","onClick","removeGuest","GuestArea","guests","components_Guest","SideBar","components_StaffArea","components_GuestArea","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","prevGuestId","handleAddGuest","concat","toConsumableArray","handleRemoveGuest","console","log","filter","g","localStorage","setItem","JSON","stringify","noGutters","components_MainArea","components_SideBar","Boolean","window","location","hostname","ReactDOM","render","components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e723d902.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Container, Col, Row, Form, Button } from \"react-bootstrap\";\n\nclass GuestLoginForm extends Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    validated: true\n  };\n\n  handleFirstNameChange = e => {\n    this.setState({ firstName: e.target.value });\n  };\n\n  handleLastNameChange = e => {\n    this.setState({ lastName: e.target.value });\n  };\n\n  handleValidation = (value1, value2) => {\n    if (!value1.match(/\\d+/g) && !value2.match(/\\d+/g)) {\n      this.setState(prevState => {\n        return {\n          validated: true\n        };\n      });\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  handleSubmit = e => {\n    const firstNameInput = document.querySelector(\"#firstNameInput\");\n    e.preventDefault();\n    const isValid = this.handleValidation(\n      this.state.firstName,\n      this.state.lastName\n    );\n\n    if (isValid) {\n      this.props.addGuest(this.state.firstName, this.state.lastName);\n      this.setState({ validated: true, firstName: \"\", lastName: \"\" });\n      firstNameInput.focus();\n    } else {\n      this.setState({ validated: false });\n    }\n  };\n\n  render() {\n    return (\n      <Container id=\"login-form\">\n        <Form onSubmit={this.handleSubmit}>\n          <Row>\n            <Col lg={6}>\n              <div id=\"first-name-div\">\n                <Form.Group>\n                  {/* <Form.Label>First Name</Form.Label> */}\n                  <Form.Control\n                    required\n                    id=\"firstNameInput\"\n                    type=\"text\"\n                    placeholder=\"First Name\"\n                    value={this.state.firstName}\n                    onChange={this.handleFirstNameChange}\n                  />\n                </Form.Group>\n              </div>\n            </Col>\n            <Col lg={6}>\n              <div id=\"last-name-div\">\n                <Form.Group>\n                  {/* <Form.Label>Last Name</Form.Label> */}\n                  <Form.Control\n                    required\n                    type=\"text\"\n                    placeholder=\"Last Name\"\n                    value={this.state.lastName}\n                    onChange={this.handleLastNameChange}\n                  />\n                </Form.Group>\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col id=\"error-span\">\n              {this.state.validated ? (\n                <span />\n              ) : (\n                <span>Please enter valid name</span>\n              )}\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <div id=\"submit-button\">\n                <Button variant=\"primary\" type=\"submit\">\n                  Submit\n                </Button>\n              </div>\n            </Col>\n          </Row>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nexport default GuestLoginForm;\n","import React, { Component } from \"react\";\nimport GuestLoginForm from \"./GuestLoginForm\";\n\nclass MainArea extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Welcome</h1>\n        <h3>If you are a guest then please type your name below and log in</h3>\n        <GuestLoginForm addGuest={this.props.addGuest} />\n      </div>\n    );\n  }\n}\n\nexport default MainArea;\n","import React, { Component, Fragment } from \"react\";\nimport { Badge } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\n\nclass StaffMember extends Component {\n  render() {\n    return (\n      <div id=\"staff-list\">\n        <Fragment>\n          <div className=\"profile staff-profile\">\n            {this.props.inOffice ? (\n              <Badge className=\"indicator\" pill variant=\"success\">\n                In\n              </Badge>\n            ) : (\n              <Badge className=\"indicator\" pill variant=\"danger\">\n                Out\n              </Badge>\n            )}\n            <p className=\"person-name staff-name\">\n              {this.props.firstName} {this.props.lastName}\n            </p>\n          </div>\n        </Fragment>\n      </div>\n    );\n  }\n}\n\nStaffMember.propTypes = {\n  firstName: PropTypes.string,\n  lastName: PropTypes.string,\n  inOffice: PropTypes.bool\n};\n\nexport default StaffMember;\n","import React, { Component } from \"react\";\nimport StaffMember from \"./StaffMember\";\n\nclass StaffArea extends Component {\n  render() {\n    return (\n      <div id=\"staff-area\">\n        <h1>Staff</h1>\n        {this.props.staff.map((person, index) => (\n          <StaffMember\n            firstName={person.firstName}\n            lastName={person.lastName}\n            inOffice={person.inOffice}\n            key={index + 1}\n            id={index + 1}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default StaffArea;\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Guest extends Component {\n  render() {\n    return (\n      <div id=\"guest-list\">\n        <Fragment>\n          <div className=\"profile guest-profile\">\n            <p className=\"person-name guest-name\">\n              {this.props.firstName} {this.props.lastName}\n            </p>\n            <button\n              className=\"delete-button\"\n              onClick={() => this.props.removeGuest(this.props.id)}\n            >\n              X\n            </button>\n          </div>\n        </Fragment>\n      </div>\n    );\n  }\n}\n\nGuest.propTypes = {\n  firstName: PropTypes.string,\n  lastName: PropTypes.string,\n  removeGuest: PropTypes.func\n};\n\nexport default Guest;\n","import React, { Component, Fragment } from \"react\";\nimport Guest from \"./Guest\";\n\nclass GuestArea extends Component {\n  render() {\n    return (\n      <div id=\"guest-area\">\n        <Fragment>\n          <h1>Guests</h1>\n        </Fragment>\n        <Fragment>\n          {this.props.guests.map((person, index) => (\n            <Guest\n              firstName={person.firstName}\n              lastName={person.lastName}\n              key={index + 1}\n              id={person.id}\n              removeGuest={this.props.removeGuest}\n            />\n          ))}\n        </Fragment>\n      </div>\n    );\n  }\n}\n\nexport default GuestArea;\n","import React, { Component } from \"react\";\nimport StaffArea from \"./StaffArea\";\nimport GuestArea from \"./GuestArea\";\n\nclass SideBar extends Component {\n  render() {\n    return (\n      <div className=\"sidebar\">\n        <StaffArea staff={this.props.staff} />\n\n        <GuestArea\n          guests={this.props.guests}\n          removeGuest={this.props.removeGuest}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SideBar;\n","import React, { Component } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport \"../index.scss\";\nimport MainArea from \"./MainArea\";\nimport SideBar from \"./SideBar\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    // Assign state itself, and a default value for items\n    this.state = {\n      staff: [\n        {\n          firstName: \"Martin\",\n          lastName: \"Coutts\",\n          inOffice: true\n        },\n        {\n          firstName: \"Homer\",\n          lastName: \"Simpson\",\n          inOffice: false\n        },\n        {\n          firstName: \"Kylo\",\n          lastName: \"Ren\",\n          inOffice: true\n        },\n        {\n          firstName: \"Charles\",\n          lastName: \"Xavier\",\n          inOffice: false\n        },\n        {\n          firstName: \"Carol\",\n          lastName: \"Danvers\",\n          inOffice: false\n        },\n        {\n          firstName: \"Bobby\",\n          lastName: \"Firmino\",\n          inOffice: true\n        }\n      ],\n      guests: []\n    };\n  }\n\n  // Initialise ID counter\n  prevGuestId = 0;\n\n  handleAddGuest = (firstName, lastName) => {\n    this.setState(prevState => {\n      return {\n        guests: [\n          ...prevState.guests,\n          {\n            firstName,\n            lastName,\n            id: (this.prevGuestId += 1),\n            inOffice: true\n          }\n        ]\n      };\n    });\n  };\n\n  handleRemoveGuest = id => {\n    console.log(id);\n    this.setState(prevState => {\n      return {\n        guests: prevState.guests.filter(g => g.id !== id)\n      };\n    });\n  };\n\n  componentDidMount() {\n    localStorage.setItem(\"staff\", JSON.stringify(this.state.staff));\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\"staff\", JSON.stringify(this.state.staff));\n    localStorage.setItem(\"guests\", JSON.stringify(this.state.guests));\n  }\n\n  render() {\n    return (\n      <Row className=\"App\" noGutters={true}>\n        {/* <div className=\"App\"> */}\n        <Col lg={8} className=\"main-area\">\n          <MainArea addGuest={this.handleAddGuest} />\n        </Col>\n\n        <Col lg={4}>\n          <SideBar\n            staff={this.state.staff}\n            guests={this.state.guests}\n            removeGuest={this.handleRemoveGuest}\n          />\n        </Col>\n        {/* </div> */}\n      </Row>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}